{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/contact/contact-selector.js","components/redux/contact/contact-action.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","components/redux/contact/contact-reduce.js","components/redux/store.js","index.js"],"names":["module","exports","getContact","state","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","name","includes","getFiteredContact","addContact","createAction","number","payload","id","uniqueId","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","reset","onSubmit","event","preventDefault","find","alert","className","styles","itemForm","itemBlock","label","Input","type","placeholder","onChange","itemInput","Button","color","button","disabled","Filter","itemFilter","itemTextFilter","itemElement","ContactList","length","map","item__contact","item__text","item__button","onClick","onDeleteContact","App","style","textAlign","bigText","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.96f9ce95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__279Qc\",\"input\":\"ContactForm_input__3os_I\",\"itemForm\":\"ContactForm_itemForm__2srw9\",\"itemInput\":\"ContactForm_itemInput__2gGk9\",\"itemBlock\":\"ContactForm_itemBlock__2nybA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__3GVt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFilter\":\"Filter_itemFilter__rJAVe\",\"itemElement\":\"Filter_itemElement__3kVBS\",\"itemTextFilter\":\"Filter_itemTextFilter__1z-xq\"};","export const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContact = state => {\r\n    const contacts = getContact(state);\r\n    const filter = getFilter(state);\r\n\r\n    const getFiteredContact = contacts => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(text =>\r\n            text.name.toLowerCase().includes(normalizedFilter),    \r\n        );\r\n    };\r\n\r\n    return getFiteredContact(contacts);\r\n};","import { v4 as uniqueId } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction(\r\n    'contact/addContact',\r\n    function prepare(name, number) {\r\n        return {\r\n            payload: {\r\n                id: uniqueId(),\r\n                name,\r\n                number,\r\n            },\r\n        };\r\n    },\r\n);\r\n\r\nexport const deleteContact = createAction('contact/deleteContact');\r\nexport const changeFilter = createAction('contact/changeFilter');","import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContact } from '../redux/contact/contact-selector';\r\nimport { addContact } from '../redux/contact/contact-action';\r\n\r\nimport { Input } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const auditContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким іменем вже існує.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.itemForm}>\r\n      <div className={styles.itemBlock}>\r\n        <label className={styles.label}>\r\n          Ім'я:\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Jack Sparrow\"\r\n              onChange={handleChange}\r\n              className={styles.itemInput}\r\n            />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Номер:\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              placeholder=\"111-11-11\"\r\n              onChange={handleChange}\r\n              className={styles.itemInput}\r\n            />\r\n        </label>\r\n      </div>\r\n\r\n      <Button type=\"submit\" color=\"primary\" className={styles.button} disabled={name === '' || number === ''}>\r\n        Додати контакт\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n  \r\nexport default ContactForm;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFilter } from \"components/redux/contact/contact-action\";\r\nimport styles from './Filter.module.css';\r\nimport { getFilter } from \"components/redux/contact/contact-selector\";\r\nimport { Input } from '@material-ui/core';\r\n\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <label className={styles.itemFilter}>\r\n      <p className={styles.itemTextFilter}>Поиск контактов</p>\r\n      <Input\r\n        className={styles.itemElement}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => dispatch(changeFilter(event.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../redux/contact/contact-action';\r\nimport { getVisibleContact } from '../redux/contact/contact-selector';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction ContactList () {\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      {!contacts.length && <div>Немає жодного контакту</div>}\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.item__contact}>\r\n            <p className={styles.item__text}>{name}</p>\r\n            <p className={styles.item__text}>{number}</p>\r\n            <Button\r\n              className={styles.item__button}\r\n              onClick={() => onDeleteContact(id)}\r\n              color=\"secondary\"\r\n            >\r\n              Видалити\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n  \r\nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport styles from './App.css';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div style={{textAlign: \"center\"}}>\r\n      <h1 className={styles.bigText}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.text}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from \"./contact-action\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst contactTest = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contact = createReducer(contactTest, {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) => \r\n        state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n    contact,\r\n    filter,\r\n});","import contactReducer from \"./contact/contact-reduce\";\r\nimport { \r\n    configureStore, \r\n    getDefaultMiddleware, \r\n    combineReducers, \r\n} from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer =  combineReducers({ contacts: contactReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './components/redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}